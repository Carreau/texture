<?xml version="1.0" encoding="utf-8"?>
<grammar
  xmlns="http://relaxng.org/ns/structure/1.0"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:s="http://substance.io/relaxng/nodetype/1.0"
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

  <!-- Stubs -->
  <include href="restrictedJATS.rng"/>

  <!-- Stub out some of the content for that we do not provide
       a UI  -->
  <define name="mml.math">
    <element name="mml:math" s:type="external">
    </element>
  </define>
  <define name="oasis.table">
    <element name="oasis:table" s:type="external">
    </element>
  </define>
  <define name="oasis.tbody" s:type="external">
    <element name="oasis:tbody">
    </element>
  </define>
  <define name="XLINK.xmlns.attrib">
    <empty/>
  </define>
  <!-- stub out deprecated elements -->
  <define name="access-date">
    <element name="access-date" s:type="external">
    </element>
  </define>
  <define name="time-stamp">
    <element name="time-stamp" s:type="external">
    </element>
  </define>

  <!--
    Element-Type Overrides: These are necessary to generate
    an editor document model correctly.
   -->
  <!-- Annotations -->
  <s:elementType name="bold" s:type="annotation"/>
  <s:elementType name="bold" s:type="annotation"/>
  <s:elementType name="ext-link" s:type="annotation"/>
  <s:elementType name="fixed-case" s:type="annotation"/>
  <s:elementType name="italic" s:type="annotation"/>
  <s:elementType name="monospace" s:type="annotation"/>
  <s:elementType name="named-content" s:type="annotation"/>
  <s:elementType name="overline" s:type="annotation"/>
  <s:elementType name="roman" s:type="annotation"/>
  <s:elementType name="sans-serif" s:type="annotation"/>
  <s:elementType name="sc" s:type="annotation"/>
  <s:elementType name="strike" s:type="annotation"/>
  <s:elementType name="sub" s:type="annotation"/>
  <s:elementType name="sup" s:type="annotation"/>
  <s:elementType name="target" s:type="annotation"/>
  <s:elementType name="underline" s:type="annotation"/>
  <!-- Anchors -->
  <s:elementType name="milestone-start" s:type="anchor"/>
  <s:elementType name="milestone-end" s:type="anchor"/>
  <s:elementType name="overline-start" s:type="anchor"/>
  <s:elementType name="overline-end" s:type="anchor"/>
  <s:elementType name="underline-start" s:type="anchor"/>
  <s:elementType name="underline-end" s:type="anchor"/>
  <!-- Inline-Elements -->
  <s:elementType name="abbrev" s:type="inline-element"/>
  <s:elementType name="break" s:type="inline-element"/>
  <s:elementType name="chem-struct" s:type="inline-element"/>
  <s:elementType name="hr" s:type="inline-element"/>
  <s:elementType name="inline-formula" s:type="inline-element"/>
  <s:elementType name="inline-graphic" s:type="inline-element"/>
  <s:elementType name="inline-supplementary-material" s:type="inline-element"/>
  <s:elementType name="private-char" s:type="inline-element"/>
  <s:elementType name="ruby" s:type="inline-element"/>
  <s:elementType name="std-organization" s:type="inline-element"/>
  <s:elementType name="styled-content" s:type="inline-element"/>
  <s:elementType name="ruby" s:type="inline-element"/>
  <s:elementType name="x" s:type="inline-element"/>
  <s:elementType name="xref" s:type="inline-element"/>
  <!-- Containers -->
  <s:elementType name="caption" s:type="container"/>
  <s:elementType name="disp-quote-content" s:type="container"/>
  <s:elementType name="fn" s:type="container"/>

  <!-- a custom group which we use in all text-nodes that
    should allow only simple formatted text -->
  <define name="simple-formatted-text">
    <zeroOrMore>
      <choice>
        <text />
        <!-- TODO: maybe we want to be even more restrictive here -->
        <ref name="all-phrase"/>
      </choice>
    </zeroOrMore>
  </define>

  <!--
    Changes:
      - Removed all block level elements
      - Removed inline definitions of citations

    Transformation:
      - pull block-level elements one level higher
      - put citations into ref-list
  -->
  <define name="p-elements">
    <choice>
      <ref name="all-phrase"/>
    </choice>
  </define>


  <!-- Citations -->

  <!--
    Introducing <string-citation> which is pretty much like
    <mixed-citation> is, but with only formatting annotations

    TODO:
      - add a transform that converts from <mixed-citation>
        to <string-citation>
      - let editor only edit element-citation if present
        and use simple renderer to create formatted presentation
        (needs discussion)
  -->
  <define name="string-citation">
    <element name="string-citation">
      <ref name="simple-formatted-text"/>
    </element>
  </define>
  <!-- Stubbing out the original mixed citation -->
  <define name="mixed-citation">
    <element name="mixed-citation" s:type="external">
    </element>
  </define>
  <!-- Reducing citations to only element- or string-citation -->
  <define name="citation.class">
    <choice>
      <ref name="element-citation"/>
      <ref name="string-citation"/>
    </choice>
  </define>
  <define name="citation-minus-alt.class">
    <choice>
      <ref name="element-citation"/>
      <ref name="string-citation"/>
    </choice>
  </define>

  <!-- Affiliations -->

  <!--
    Introducing a new element used to group all affiliations

    Transformation:
      pick all <aff> elements from article-meta and wrap them
      in an <aff-group>
  -->
  <define name="aff-group">
    <element name="aff-group">
      <zeroOrMore>
        <ref name="aff"/>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Introducing <element-aff> and <string-aff> corresponding
    to citations: every aff can either be given in a structured
    or in a formatted way.

    TODO: define a transformation from real JATS
  -->
  <define name="aff">
    <element name="aff">
      <ref name="aff-attlist"/>
      <!-- TODO: we should use <interleave> here -->
      <optional>
        <ref name="string-aff"/>
      </optional>
      <optional>
        <ref name="element-aff"/>
      </optional>
    </element>
  </define>
  <define name="string-aff">
    <element name="string-aff">
      <ref name="simple-formatted-text"/>
    </element>
  </define>
  <define name="element-aff">
    <element name="element-aff">
      <zeroOrMore>
        <choice>
          <ref name="address.class"/>
          <ref name="email"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!-- Contributors -->

  <!--
    Introducing <element-contrib> and <string-contrib> corresponding
    to citations: every contrib can either be given in a structured
    or in a formatted way.

    TODO: define a transformation from real JATS
  -->
  <define name="contrib">
    <element name="contrib">
      <ref name="contrib-attlist"/>
      <!-- using an attribute to link to affiliations -->
      <attribute name="aff-ids">
        <data type="IDREFS"/>
      </attribute>
      <optional>
        <ref name="string-contrib"/>
      </optional>
      <optional>
        <ref name="element-contrib"/>
      </optional>
    </element>
  </define>
  <define name="string-contrib">
    <element name="string-contrib">
      <ref name="simple-formatted-text"/>
    </element>
  </define>
  <define name="element-contrib">
    <element name="element-contrib">
      <zeroOrMore>
        <choice>
          <ref name="name"/>
          <ref name="email"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="abstract-model">
    <zeroOrMore>
      <ref name="id.class"/>
    </zeroOrMore>
    <optional>
      <ref name="sec-meta"/>
    </optional>
    <optional>
      <ref name="label"/>
    </optional>
    <optional>
      <ref name="title"/>
    </optional>
    <optional>
      <ref name="abstract-content"/>
    </optional>
    <zeroOrMore>
      <ref name="sec-back-matter-mix"/>
    </zeroOrMore>
  </define>
  <define name="abstract-content">
    <element name="abstract-content" s:type="container">
      <zeroOrMore>
        <ref name="para-level"/>
      </zeroOrMore>
    </element>
  </define>

  <define name="body-model">
    <optional>
      <ref name="body-content"/>
    </optional>
    <optional>
      <ref name="sig-block"/>
    </optional>
  </define>
  <define name="body-content">
    <element name="body-content" s:type="container">
      <zeroOrMore>
        <choice>
          <ref name="sec.class"/>
          <ref name="para-level"/>
          <ref name="table-fig"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Introducing <heading> as a replacement for <sec>
   -->
  <define name="heading">
    <element name="heading">
      <ref name="sec-attlist"/>
      <optional>
        <attribute name="level"/>
      </optional>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="all-phrase"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <!--
    Overriding sec.class to use <heading>
  -->
  <define name="sec.class">
    <ref name="heading"/>
  </define>

  <define name="article-meta-model">
    <zeroOrMore>
      <ref name="article-id"/>
    </zeroOrMore>
    <optional>
      <ref name="article-categories"/>
    </optional>
    <optional>
      <ref name="title-group"/>
    </optional>
    <zeroOrMore>
      <choice>
        <ref name="contrib-group.class"/>
        <ref name="aff-group"/>
        <ref name="aff-alternatives.class"/>
        <ref name="x.class"/>
      </choice>
    </zeroOrMore>
    <optional>
      <ref name="author-notes"/>
    </optional>
    <zeroOrMore>
      <ref name="pub-date"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="volume"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="volume-id"/>
    </zeroOrMore>
    <optional>
      <ref name="volume-series"/>
    </optional>
    <zeroOrMore>
      <ref name="issue"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="issue-id"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="issue-title"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="issue-sponsor"/>
    </zeroOrMore>
    <optional>
      <ref name="issue-part"/>
    </optional>
    <zeroOrMore>
      <ref name="volume-issue-group"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="isbn"/>
    </zeroOrMore>
    <optional>
      <ref name="supplement"/>
    </optional>
    <optional>
      <choice>
        <group>
          <optional>
            <ref name="fpage"/>
            <optional>
              <ref name="lpage"/>
            </optional>
          </optional>
          <optional>
            <ref name="page-range"/>
          </optional>
        </group>
        <ref name="elocation-id"/>
      </choice>
    </optional>
    <zeroOrMore>
      <choice>
        <ref name="address-link.class"/>
        <ref name="product"/>
        <ref name="supplementary-material"/>
      </choice>
    </zeroOrMore>
    <optional>
      <ref name="history"/>
    </optional>
    <optional>
      <ref name="permissions"/>
    </optional>
    <zeroOrMore>
      <ref name="self-uri"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="related-article.class"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="abstract.class"/>
    </zeroOrMore>
    <!-- we use an explicit trans-abstract-group instead trans-abstract -->
    <zeroOrMore>
      <ref name="trans-abstract-group"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="kwd-group.class"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="funding-group"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="conference"/>
    </zeroOrMore>
    <optional>
      <ref name="counts"/>
    </optional>
    <optional>
      <ref name="custom-meta-group"/>
    </optional>
  </define>

  <define name="fig">
    <element name="fig">
      <ref name="title"/>
      <ref name="caption"/>
      <ref name="graphic"/>
    </element>
  </define>

  <!-- pulled <title> out of <caption> -->
  <define name="caption">
    <element name="caption">
      <ref name="caption-attlist"/>
      <zeroOrMore>
        <ref name="just-para.class"/>
      </zeroOrMore>
    </element>
  </define>

  <define name="table-fig">
    <element name="table-fig">
      <ref name="title"/>
      <ref name="caption"/>
      <ref name="table"/>
    </element>
  </define>

  <define name="disp-quote-content">
    <element name="disp-quote-content">
      <ref name="just-para.class"/>
    </element>
  </define>

  <define name="disp-quote-model">
    <ref name="disp-quote-content"/>
    <optional>
      <ref name="attrib"/>
    </optional>
  </define>

  <define name="trans-abstract-group">
    <element name="trans-abstract-group">
      <zeroOrMore>
        <choice>
          <ref name="trans-abstract"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="trans-abstract-model">
    <zeroOrMore>
      <ref name="id.class"/>
    </zeroOrMore>
    <!-- TODO: how to make this non-optional? -->
    <optional>
      <ref name="abstract-content"/>
    </optional>
  </define>

  <define name="trans-title-group">
    <element name="trans-title-group">
      <zeroOrMore>
        <choice>
          <ref name="trans-title"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="td.content">
    <ref name="simple-formatted-text"/>
  </define>
  <define name="th.content">
    <ref name="simple-formatted-text"/>
  </define>

</grammar>
