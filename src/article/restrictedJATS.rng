<?xml version="1.0" encoding="utf-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="JATS.rng"/>

  <!-- Groups which are shared by several elements -->

  <!--
    Changes
      - replace address-link.class with just ext-link
        i.e. remove <email> and <uri>
      - remove math.class, i.e. removed mml.math and text-math
    Transformation:
      - replace <email> and <uri> with <named-content>
      - wrap math in <inline-math>
  -->
  <define name="all-phrase">
    <choice>
      <ref name="ext-link"/>
      <ref name="article-link.class"/>
      <ref name="appearance.class"/>
      <ref name="emphasis.class"/>
      <ref name="inline-display.class"/>
      <ref name="inline-math.class"/>
      <ref name="phrase.class"/>
      <ref name="simple-link.class"/>
      <ref name="subsup.class"/>
      <ref name="x.class"/>
    </choice>
  </define>

  <!--
    Changes:
      - Removed all block level elements
      - Removed inline definitions of citations

    Transformation:
      - pull block-level elements one level higher
      - put citations into ref-list
  -->
  <define name="p-elements">
    <choice>
      <ref name="all-phrase"/>
      <ref name="block-display-noalt.class"/>
      <ref name="block-math.class"/>
      <ref name="list.class"/>
      <ref name="rest-of-para.class"/>
    </choice>
  </define>

  <!--
    Changes:
      - removed math.class
    Transformation:
      - use display-formula instead
  -->
  <define name="para-level">
    <choice>
      <ref name="block-display.class"/>
      <ref name="block-math.class"/>
      <ref name="list.class"/>
      <ref name="nothing-but-para.class"/>
      <ref name="related-article.class"/>
      <ref name="rest-of-para.class"/>
      <ref name="x.class"/>
    </choice>
  </define>

  <!--
    Change:
      - removed <ext-link> as it is an annotation
    Transformation:
      - use <email> or <uri> instead
  -->
  <define name="references.class">
    <choice>
      <ref name="annotation"/>
      <ref name="article-title"/>
      <ref name="chapter-title"/>
      <ref name="collab"/>
      <ref name="collab-alternatives"/>
      <ref name="comment"/>
      <ref name="conf-acronym"/>
      <ref name="conf-date"/>
      <ref name="conf-loc"/>
      <ref name="conf-name"/>
      <ref name="conf-sponsor"/>
      <ref name="data-title"/>
      <ref name="date"/>
      <ref name="date-in-citation"/>
      <ref name="day"/>
      <ref name="edition"/>
      <ref name="email"/>
      <ref name="elocation-id"/>
      <ref name="etal"/>
      <ref name="fpage"/>
      <ref name="gov"/>
      <ref name="institution"/>
      <ref name="institution-wrap"/>
      <ref name="isbn"/>
      <ref name="issn"/>
      <ref name="issn-l"/>
      <ref name="issue"/>
      <ref name="issue-id"/>
      <ref name="issue-part"/>
      <ref name="issue-title"/>
      <ref name="lpage"/>
      <ref name="month"/>
      <ref name="name"/>
      <ref name="name-alternatives"/>
      <ref name="object-id"/>
      <ref name="page-range"/>
      <ref name="part-title"/>
      <ref name="patent"/>
      <ref name="person-group"/>
      <ref name="pub-id"/>
      <ref name="publisher-loc"/>
      <ref name="publisher-name"/>
      <ref name="role"/>
      <ref name="season"/>
      <ref name="series"/>
      <ref name="size"/>
      <ref name="source"/>
      <ref name="std"/>
      <ref name="string-name"/>
      <ref name="supplement"/>
      <ref name="trans-source"/>
      <ref name="trans-title"/>
      <ref name="uri"/>
      <ref name="version"/>
      <ref name="volume"/>
      <ref name="volume-id"/>
      <ref name="volume-series"/>
      <ref name="year"/>
    </choice>
  </define>

  <!-- Redefinitions -->

  <!--
    Changes:
      - replaced all-phrase with a selection of pure math content
        - math.class: mathml or tex,
        - graphic: if given as image,
        - x: generated
    Transformation:
      - Not available: due to the arbitrarity of the original spec,
        it is impossible to write a universal transformer
  -->
  <define name="inline-formula">
    <element name="inline-formula">
      <!-- attributes -->
      <ref name="inline-formula-attlist"/>
      <!-- elements -->
      <choice>
        <ref name="x"/>
        <ref name="math.class"/>
        <ref name="graphic"/>
      </choice>
    </element>
  </define>

  <!--
    Changes:
      - replaced mixed-content with a selection of structured data
        separating meta-data from content
    Transformation:
      - Not available: due to the arbitrarity of the original spec,
        it is impossible to write a universal transformer
  -->
  <define name="disp-formula">
    <element name="disp-formula">
      <!-- attributes -->
      <ref name="disp-formula-attlist"/>
      <!-- elements -->
      <optional>
        <ref name="label"/>
      </optional>
      <zeroOrMore>
        <ref name="abstract"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="kwd-group"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="access.class"/>
      </zeroOrMore>
      <choice>
        <ref name="x"/>
        <ref name="math.class"/>
        <ref name="graphic"/>
      </choice>
      <zeroOrMore>
        <choice>
          <ref name="attrib"/>
          <ref name="permissions"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Changes:
      -
  -->
  <define name="element-citation">
    <element name="element-citation">
      <ref name="element-citation-attlist"/>
      <oneOrMore>
        <choice>
          <ref name="related-article"/>
          <ref name="related-object"/>
          <ref name="citation-additions.class"/>
          <ref name="label.class"/>
          <ref name="references.class"/>
        </choice>
      </oneOrMore>
    </element>
  </define>

  <!--
    Changes:
      - in general, the structured pieces have been removed because
        this element seems to be intended as a text-node primarily
      - removed address.class
      - removed contrib-group.class
      - removed contrib-info.class
      - removed math.class

    TODO: how can existing JATS be mapped? need samples for that, as intention of spec
    is unclear.
  -->
  <define name="collab">
    <element name="collab">
      <ref name="collab-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="article-link.class"/>
          <ref name="appearance.class"/>
          <ref name="break.class"/>
          <ref name="emphasis.class"/>
          <ref name="inline-display.class"/>
          <ref name="inline-math.class"/>
          <ref name="phrase.class"/>
          <ref name="subsup.class"/>
          <ref name="x.class"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Changes:
      - in general, the structured pieces have been removed because
        this element seems to be intended as a text-node primarily
      - removed address.class

    TODO: look at samples to come up with a transformation strategy.
  -->
  <define name="conf-loc">
    <element name="conf-loc">
      <ref name="conf-loc-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="simple-text"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!-- Correspondence -->

  <!--
    Changes:
      - removed structured content, as this to be used as a text-node primarily
      - removed "address.class"
      - removed "label.class"

    Transformation: TODO learn from samples
  -->
  <define name="corresp">
    <element name="corresp">
      <ref name="corresp-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="all-phrase"/>
          <ref name="break.class"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Changes:
      - removed structured content, as this to be used as a text-node primarily
      - removed "address.class"

    Transformation: TODO learn from samples
  -->
  <define name="publisher-loc">
    <element name="publisher-loc">
      <ref name="publisher-loc-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="all-phrase"/>
          <ref name="break.class"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Changes:
      - removed textual content, as this to be used as an element node primarily
      - removed "x.class"

    Transformation: TODO learn from samples
  -->
  <define name="person-group">
    <element name="person-group">
      <ref name="person-group-attlist"/>
      <zeroOrMore>
        <choice>
          <ref name="name.class"/>
          <ref name="person-group-info.class"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>


<!------------------------------------------------------
                  TODO
    ------------------------------------------------------>


  <define name="sig-block">
    <element name="sig-block">
      <ref name="sig-block-attlist"/>
      <zeroOrMore>
        <ref name="sig-block-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="sig-block-elements">
    <choice>
      <ref name="contrib.class"/>
      <ref name="person-group-info.class"/>
      <ref name="sig.class"/>
    </choice>
  </define>
  <define name="sig">
    <element name="sig">
      <ref name="sig-attlist"/>
      <zeroOrMore>
        <ref name="sig-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="sig-elements">
    <choice>
      <ref name="x" />
      <ref name="graphic" />
    </choice>
  </define>

  <define name="alternatives-display.class">
    <choice>
      <ref name="array"/>
      <ref name="chem-struct"/>
      <ref name="code"/>
      <ref name="graphic"/>
      <ref name="media"/>
      <ref name="preformat"/>
      <ref name="supplementary-material"/>
      <ref name="table"/>
      <ref name="oasis.table"/>
      <ref name="textual-form"/>
    </choice>
  </define>
  <define name="inline-display.class">
    <choice>
      <!-- TODO: we need <inline-alternatives>
      <ref name="alternatives"/>
      !-->
      <ref name="inline-graphic"/>
      <ref name="private-char"/>
    </choice>
  </define>

  <define name="chem-struct-model">
    <zeroOrMore>
      <ref name="chem-struct-elements"/>
    </zeroOrMore>
  </define>
  <define name="chem-struct-elements">
    <choice>
      <ref name="access.class"/>
      <ref name="id.class"/>
      <ref name="label.class"/>
      <ref name="list.class"/>
      <ref name="simple-display-noalt.class"/>
    </choice>
  </define>

  <define name="article-link.class">
    <choice>
      <ref name="xref"/>
    </choice>
  </define>

  <define name="inline-supplementary-material">
    <element name="inline-supplementary-material">
      <empty/>
    </element>
  </define>

  <define name="related-article">
    <element name="related-article">
      <ref name="related-article-attlist"/>
      <zeroOrMore>
        <ref name="related-article-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="related-article-elements">
    <choice>
      <ref name="citation-additions.class"/>
      <ref name="label.class"/>
      <ref name="references.class"/>
      <ref name="journal-id.class"/>
    </choice>
  </define>

  <define name="related-object">
    <element name="related-object">
      <ref name="related-object-attlist"/>
      <zeroOrMore>
        <ref name="related-object-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="related-object-elements">
    <choice>
      <ref name="citation-additions.class"/>
      <ref name="label.class"/>
      <ref name="references.class"/>
    </choice>
  </define>

  <define name="product">
    <element name="product">
      <ref name="product-attlist"/>
      <zeroOrMore>
        <ref name="product-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="product-elements">
    <choice>
      <ref name="citation-additions.class"/>
      <ref name="label.class"/>
      <ref name="references.class"/>
      <ref name="price.class"/>
    </choice>
  </define>

  <define name="code-elements">
    <choice>
      <ref name="ext-link"/>
      <ref name="emphasis.class"/>
      <ref name="phrase.class"/>
      <ref name="simple-link.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

  <define name="data-title-elements">
    <choice>
      <ref name="ext-link"/>
      <ref name="emphasis.class"/>
      <ref name="phrase-content.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

  <define name="address-link.class">
    <choice>
      <ref name="email"/>
      <ref name="uri"/>
    </choice>
  </define>

  <define name="contrib-info.class">
    <choice>
      <ref name="address"/>
      <ref name="aff"/>
      <ref name="aff-alternatives"/>
      <ref name="author-comment"/>
      <ref name="bio"/>
      <ref name="email"/>
      <ref name="etal"/>
      <ref name="fn"/>
      <ref name="on-behalf-of"/>
      <ref name="role"/>
      <ref name="uri"/>
      <ref name="xref"/>
    </choice>
  </define>

  <define name="string-conf-elements">
    <ref name="simple-text"/>
  </define>

  <define name="struct-title-elements">
    <choice>
      <ref name="all-phrase"/>
      <ref name="break.class"/>
    </choice>
  </define>

  <define name="funding-statement-elements">
    <choice>
      <ref name="all-phrase"/>
    </choice>
  </define>

  <define name="addr-line-elements">
    <choice>
      <ref name="simple-text"/>
    </choice>
  </define>


  <define name="conf-date">
    <element name="conf-date">
      <ref name="conf-date-attlist"/>
      <zeroOrMore>
        <ref name="conf-date-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="conf-date-elements">
    <choice>
      <ref name="date-parts.class"/>
    </choice>
  </define>

  <define name="date-in-citation">
    <element name="date-in-citation">
      <ref name="date-in-citation-attlist"/>
      <zeroOrMore>
        <ref name="date-in-citation-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="date-in-citation-elements">
    <choice>
      <ref name="date-parts.class"/>
    </choice>
  </define>

  <define name="string-date-elements">
    <choice>
      <ref name="all-phrase"/>
    </choice>
  </define>

  <define name="string-name-elements">
    <choice>
      <ref name="all-phrase"/>
    </choice>
  </define>

  <define name="history-elements">
    <choice>
      <ref name="date.class"/>
    </choice>
  </define>
  <define name="history-model">
    <zeroOrMore>
      <ref name="history-elements"/>
    </zeroOrMore>
  </define>

  <define name="supplement-elements">
    <choice>
      <ref name="simple-text"/>
    </choice>
  </define>

  <define name="speaker-elements">
    <choice>
      <ref name="all-phrase"/>
    </choice>
  </define>

  <define name="def-list-model">
    <optional>
      <ref name="label"/>
    </optional>
    <optional>
      <ref name="title"/>
    </optional>
    <optional>
      <ref name="term-head"/>
    </optional>
    <optional>
      <ref name="def-head"/>
    </optional>
    <zeroOrMore>
      <ref name="def-item.class"/>
    </zeroOrMore>
  </define>
  <define name="def-item-model">
    <optional>
      <ref name="label"/>
    </optional>
    <ref name="term"/>
    <ref name="def.class"/>
  </define>
  <define name="term">
    <element name="term">
      <ref name="term-attlist"/>
      <ref name="term-model"/>
    </element>
  </define>
  <define name="term-model">
    <choice>
      <oneOrMore>
        <choice>
          <text/>
          <ref name="all-phrase"/>
        </choice>
      </oneOrMore>
      <choice>
        <ref name="block-math.class"/>
        <ref name="chem-struct-wrap.class"/>
        <ref name="simple-display-noalt.class"/>
      </choice>
    </choice>
  </define>
  <define name="def-model">
    <oneOrMore>
      <ref name="just-para.class"/>
    </oneOrMore>
  </define>

  <define name="simple-link.class">
    <choice>
      <ref name="target"/>
      <ref name="xref"/>
    </choice>
  </define>

  <define name="std-elements">
    <choice>
      <ref name="emphasis.class"/>
      <ref name="phrase-content.class"/>
      <ref name="std-organization"/>
      <ref name="subsup.class"/>
    </choice>
  </define>
  <define name="std-organization">
    <element name="std-organization">
      <ref name="std-organization-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="all-phrase"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="principal-award-recipient">
    <element name="principal-award-recipient">
      <ref name="principal-award-recipient-attlist"/>
      <zeroOrMore>
        <choice>
          <ref name="principal-award-recipient-elements"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="principal-investigator">
    <element name="principal-investigator">
      <ref name="principal-investigator-attlist"/>
      <zeroOrMore>
        <choice>
          <ref name="principal-investigator-elements"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="conf-sponsor-elements">
    <choice>
      <ref name="simple-text"/>
    </choice>
  </define>

  <!-- TODO: why not allow simple-text here? -->
  <define name="copyright-holder-elements">
    <choice>
      <ref name="subsup.class"/>
      <ref name="x.class"/>
    </choice>
  </define>

  <define name="funding-source">
    <element name="funding-source">
      <ref name="funding-source-attlist"/>
      <zeroOrMore>
        <choice>
          <text />
          <ref name="simple-text"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="on-behalf-of-elements">
    <choice>
      <ref name="rendition-plus"/>
    </choice>
  </define>

  <define name="publisher-name-elements">
    <choice>
      <ref name="just-rendition"/>
    </choice>
  </define>

  <define name="license-p-elements">
    <choice>
      <ref name="p-elements"/>
    </choice>
  </define>

  <define name="preformat-elements">
    <choice>
      <ref name="all-phrase"/>
    </choice>
  </define>

  <define name="abbrev-elements">
    <choice>
      <ref name="all-phrase"/>
    </choice>
  </define>

  <define name="textual-form-elements">
    <choice>
      <ref name="emphasis.class"/>
      <ref name="inline-display-noalt.class"/>
      <ref name="phrase-content.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

</grammar>
